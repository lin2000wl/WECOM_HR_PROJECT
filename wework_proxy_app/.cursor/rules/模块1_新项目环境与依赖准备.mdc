---
description: 
globs: 
alwaysApply: true
---
# 模块1：新项目环境与依赖准备

## 模块功能说明
本模块用于为新的代理转发应用创建项目结构、定义依赖项，并配置初始环境变量。

## 项目结构
```
wework_proxy_app/
├── app.py               # Flask 应用主文件
├── requirements.txt     # Python 依赖列表
├── .env                 # 环境变量 (FLASK_APP, FLASK_RUN_PORT, TARGET_SERVER_URL)
└── .cursor/
    └── rules/
        └── 模块1_新项目环境与依赖准备.mdc
```

## 依赖项 (`requirements.txt`)
```
Flask
requests
python-dotenv
```

## 环境变量 (`.env`)
```
FLASK_APP=app.py
FLASK_RUN_PORT=5000  # Flask 开发服务器监听的端口
FLASK_DEBUG=True     # 开发模式，生产环境建议设为 False
TARGET_SERVER_URL="YOUR_TARGET_PUBLIC_SERVER_URL_HERE" # 【重要】请用户替换为实际的目标公网服务器URL
```

## 操作步骤
1.  已创建 `wework_proxy_app` 目录。
2.  已创建 `wework_proxy_app/requirements.txt` 并填入依赖。
3.  尝试创建 `wework_proxy_app/.env` 并填入基础配置 (如遇阻，用户需手动创建)。
4.  已创建 `wework_proxy_app/app.py` (空文件)。
5.  本文档 (`模块1_新项目环境与依赖准备.mdc`) 已创建。

## 已验证结果
-   `wework_proxy_app/requirements.txt` 文件已按预期创建和填充。
-   `wework_proxy_app/app.py` 文件已按预期创建。
-   用户已知晓需手动创建或检查 `.env` 文件，并根据实际情况替换 `TARGET_SERVER_URL`。

## 后续步骤
-   激活虚拟环境。
-   安装 `requirements.txt` 中的依赖。
-   用户确认 `.env` 文件中的 `TARGET_SERVER_URL` 已正确配置。

